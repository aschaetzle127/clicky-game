{"version":3,"sources":["components/Wrapper/index.js","components/Title/index.js","components/Score/index.js","components/CharCard/index.js","App.js","index.js"],"names":["Wrapper","props","react_default","a","createElement","className","children","Title","Score","total","status","Card","alt","id","src","image","onClick","shuffleCard","App","state","characters","clickedCharIds","score","goal","_this","includes","setState","push","length","console","log","i","j","Math","floor","random","_ref","_this2","this","components_Wrapper","components_Title","components_Score","map","character","CharCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"mpCAKeA,SAFC,SAAAC,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMK,YCE1CC,SAFD,SAAAN,GAAK,OAAIC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMK,YCMrCE,SAND,SAAAP,GAAK,OACjBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,UAA8BJ,EAAMQ,OACpCP,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAUJ,EAAMS,WCSnBC,SAZF,SAAAV,GAAK,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OACEQ,IAAKX,EAAMY,GACXC,IAAKb,EAAMc,MACXF,GAAIZ,EAAMY,GACVG,QAAS,kBAAMf,EAAMgB,YAAYhB,EAAMY,KACvCR,UAAU,wBC8DDa,6MAhEbC,MAAQ,CACNC,aACAC,eAAgB,GAChBC,MAAO,EACPC,KAAM,GACNb,OAAQ,MAGVO,YAAc,SAAAJ,GACZ,IAAIQ,EAAiBG,EAAKL,MAAME,eAEhC,GAAIA,EAAeI,SAASZ,GAC1BW,EAAKE,SAAS,CACZL,eAAgB,GAChBC,MAAO,EACPZ,OAAQ,sCAJZ,CAUE,GAFAW,EAAeM,KAAKd,GAEU,KAA1BQ,EAAeO,OAOjB,OANAJ,EAAKE,SAAS,CACZL,eAAgB,GAChBC,MAAO,GACPZ,OAAQ,0BAEVmB,QAAQC,IAAI,UAGdN,EAAKE,SAAS,CACZN,aACAC,iBACAC,MAAOD,EAAeO,OACtBlB,OAAQ,KAEV,IAAK,IAAIqB,EAAI,EAAGA,EAAIX,EAAWQ,OAAQG,IAAK,CAC1C,IAAMC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IADAK,EAET,CAAChB,EAAWY,GAAIZ,EAAWW,IAA3DX,EAAWW,GAF8BK,EAAA,GAE1BhB,EAAWY,GAFeI,EAAA,8EAOvC,IAAAC,EAAAC,KACP,OACEpC,EAAAC,EAAAC,cAACmC,EAAD,KACErC,EAAAC,EAAAC,cAACoC,EAAD,KACEtC,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,4EAEFF,EAAAC,EAAAC,cAACqC,EAAD,CAAOhC,MAAO6B,KAAKnB,MAAMG,MAAOC,KAAM,GAAIb,OAAQ4B,KAAKnB,MAAMT,SAC5D4B,KAAKnB,MAAMC,WAAWsB,IAAI,SAAAC,GAAS,OAClCzC,EAAAC,EAAAC,cAACwC,EAAD,CACE3B,YAAaoB,EAAKpB,YAClBJ,GAAI8B,EAAU9B,GACdgC,IAAKF,EAAU9B,GACfE,MAAO4B,EAAU5B,kBAzDX+B,mBCFlBC,IAASC,OAAO9C,EAAAC,EAAAC,cAAC6C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.f9fe203f.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst Title = props => <h1 className=\"title\">{props.children}</h1>;\n\nexport default Title;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst Score = props => (\n  <div className=\"score\">\n    <h3 className=\"score\">Score: {props.total}</h3>\n    <h3 className=\"status\">{props.status}</h3>\n  </div>\n);\nexport default Score;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst Card = props => (\n  <div className=\"card\">\n    <img\n      alt={props.id}\n      src={props.image}\n      id={props.id}\n      onClick={() => props.shuffleCard(props.id)}\n      className=\"shuffling\"\n    />\n  </div>\n);\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Score from \"./components/Score\";\nimport CharCard from \"./components/CharCard\";\nimport characters from \"./marvel.json\";\n\nclass App extends Component {\n  state = {\n    characters,\n    clickedCharIds: [],\n    score: 0,\n    goal: 12,\n    status: \"\"\n  };\n\n  shuffleCard = id => {\n    let clickedCharIds = this.state.clickedCharIds;\n\n    if (clickedCharIds.includes(id)) {\n      this.setState({\n        clickedCharIds: [],\n        score: 0,\n        status: \"GAME OVER!! YOU LOST THE WAR!\"\n      });\n      return;\n    } else {\n      clickedCharIds.push(id);\n\n      if (clickedCharIds.length === 12) {\n        this.setState({\n          clickedCharIds: [],\n          score: 12,\n          status: \"YOU WON THE WAR!\"\n        });\n        console.log(\"winner\");\n        return;\n      }\n      this.setState({\n        characters,\n        clickedCharIds,\n        score: clickedCharIds.length,\n        status: \"\"\n      });\n      for (let i = 0; i < characters.length; i++) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [characters[i], characters[j]] = [characters[j], characters[i]];\n      }\n    }\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <Title>\n          <h1>Infinity Clicks</h1>\n          <p>Select all of the heroes, but don't select the same one twice!</p>\n        </Title>\n        <Score total={this.state.score} goal={12} status={this.state.status} />\n        {this.state.characters.map(character => (\n          <CharCard\n            shuffleCard={this.shuffleCard}\n            id={character.id}\n            key={character.id}\n            image={character.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}